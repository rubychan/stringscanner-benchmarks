Well…
=====

    [01:25] murphy_karasu: the blog mentions something about 2x as fast as 1.9.2 I think?
    [01:25] brixen: yes, on *pure* Ruby code
    [01:26] brixen: murphy_karasu: in MRI, Array, Hash, String, etc are all C code
    [01:27] murphy_karasu: yeah I know. so, it is not expected that a library using mainly StringScanner is running 2x as fast as on YARV?
    [01:28] brixen: StringScanner is in C in MRI and Ruby in rbx
    [01:28] murphy_karasu: it is surprisingly fast, considering that fact
    [01:29] brixen: murphy_karasu: evan is working on some new JIT stuff that will enable us to get even faster
    [01:29] brixen: but there are still issues where code in MRI is essentially one C function calling ather
    [01:29] murphy_karasu: CodeRay may be a boring benchmark because it is mostly doing string/regexp work
    [01:29] brixen: well, it's not boring
    [01:30] brixen: we've improved String/Regexp quite a bit, but it's still good to have data
    [01:33] murphy_karasu: okay, I think I can already say the speed difference MRI/Rubinius in CodeRay benchmarks is mostly because of StringScanner
    [01:34] brixen: well, perhaps we can speed up StringScanner
    [01:34] murphy_karasu: I've read the strscan.rb code, it's really good
    [01:34] murphy_karasu: which regexp engine is Rubinius using?
    [01:34] brixen: give us a repro and evan can use it as a test case for the new JIT work
    [01:34] brixen: rbx uses oniguruma
    [01:35] murphy_karasu: mmh…so, in theory it should be able to be as fast as MRI or better
    [01:35] evan: murphy_karasu: your best bet would be to write some stringscanner benchmarks
    [01:35] evan: i'd be happy to add those to a benchmark suite
    [01:36] murphy_karasu: a stringscanner benchmark suite, derived from coderay use cases…wow, that's a great idea!
    [01:37] murphy_karasu: evan: should I use benchmark/tiers as a base for such benchmarks?
    [01:38] evan: murphy_karasu: no
    [01:38] evan: murphy_karasu: just use normal benchmarking
    [01:38] evan: Benchmark.bmbm
    [01:38] evan: etc.
    [01:39] murphy_karasu: evan: how do they integrate with the suite?
    [01:39] evan: they don't.
    [01:39] evan: murphy_karasu: thats not the point.
    [01:40] evan: i'm in the process of working out our benchmarking strategy
    [01:40] evan: and any benchmark that uses Benchmark. will integrate fine.
    [01:40] murphy_karasu: cool…I think I have a bunch of benchmarks already here…just small scripts to test some feature agains another
    [01:43] murphy_karasu: evan: I guess publishing the benchmarks as a new github repo would be best…so other projects could use them too?
    [01:43] evan: however
    [01:43] evan: totally up to you.
